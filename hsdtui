#!/bin/zsh
trap proc_exit SIGINT
proc_exit() {
	tput cnorm
	echo -ne '\e[?1049l'
	exit 0
}
init() {
	tput civis
	echo -ne '\e[?1049h'
}
print_headline() {
	echo "Name STT RST" | format_print
	printf "%0.s-" {1..$COLUMNS}
	echo
}
format_print() {
	awk "{printf \"%-${C1}s %${C2}s %${C3}s\",\$1,\$2,\$3}"
}
set_geometry() {
	columns="$(tput cols)"
	lines="$(tput lines)"
	C2=3
	C3=$(( (columns - C2 - 2) / 3 ))
	C1=$(( columns - C2 - C3 - 2 ))
}

main_loop() {
	hline=0
	services="$(ls "$XDG_CONFIG_HOME/hsd/service/" | sed 's/\.sh$//g')"
	services_count="$(echo $services | wc -l)"
	echo -ne '\e[2J'
	while true; do
		set_geometry
		current_service="$(echo $services | sed -n "$((hline + 1))p")"
		ln=0
		# echo -e '\e[2J\e[1;1H'
		echo -ne '\e[1;1H'
		print_headline
		while read -r service; do
			if [ "$ln" = "$hline" ]; then
				echo -ne '\e[0;7m'
				mylauncher hsd hsd status $service | format_print
				echo -e '\e[0m'
			else
				mylauncher hsd hsd status $service | format_print
				echo
			fi
			ln=$((ln + 1))
		done <<<$(echo $services)
		echo -ne '\e[0J'
		c=""
		echo -ne "\e[$lines;1H"
		read -r -s -k 1 -t 1 c
		if [ "$c" = "j" ]; then
			[ "$hline" -lt "$((services_count - 1))" ] && hline=$((hline + 1))
		elif [ "$c" = "k" ]; then
			[ "$hline" -gt 0 ] && hline=$((hline - 1))
		elif [ "$c" = "r" ]; then
			mylauncher hsd hsd start $current_service > /dev/null
		elif [ "$c" = "s" ]; then
			mylauncher hsd hsd stop $current_service > /dev/null
		elif [ "$c" = "c" ]; then
			mylauncher hsd hsd clean $current_service
		# TUI shouldn't use killtree
		# it will kill TUI window, and will not clean
		# elif [ "$c" = "K" ]; then
		# 	mylauncher hsd killtree $current_service
		elif [ "$c" = "R" ]; then
			return
		elif [ "$c" = "q" ]; then
			proc_exit
		fi
	done
}
init
stty -echo
while true; do
	main_loop
done
