#!/bin/zsh
set -e
if [ -f "$XDG_DATA_HOME/hsd/pid" ]; then
	local STATUSFILE="/proc/$(cat "$XDG_DATA_HOME"/hsd/pid)/status"
	if [ -f "$STATUSFILE" ]; then
		if (cat "$STATUSFILE" | grep -q "^Name:	hsd-daemon$"); then
			exit 1
		fi
	fi
fi

mkdir -p "$XDG_DATA_HOME/hsd"
error_path="$XDG_DATA_HOME/hsd/error.log"
exec 2>>$error_path

trap clean_exit EXIT INT TERM
clean_exit() {
	while read -r pname stt rst; do
		if [ "$status" = "r" ]; then
			_hsd_stop "$name"
		fi
	done <<<$(mylauncher hsd hsd status)
	rm -f "$XDG_DATA_HOME/hsd/pid"
	rm -f "$fifofile"
	exit 0
}

dprint() {
	date | tr -d '\n'
	echo -ne ": "
	echo $@
}

_hsd_start_fork() {
	set -m
	trap : SIGTERM
	mylauncher hsd hsd check_run $1 && dprint "Already running" && exit 2
	mkdir -p "$XDG_DATA_HOME/hsd/service/$1"
	source "$XDG_CONFIG_HOME/hsd/service/$1.sh"
	hsd_start &
	echo "$!" > "$XDG_DATA_HOME/hsd/service/$1/pid"
	wait
	echo "$?" > "$XDG_DATA_HOME/hsd/service/$1/exit"
	rm "$XDG_DATA_HOME/hsd/service/$1/pid"
}

_hsd_start() {
	! [ -f "$XDG_CONFIG_HOME/hsd/service/$1.sh" ] && return 1
	( _hsd_start_fork $@ & ) &
}

_hsd_stop() {
	if ! pid="$(mylauncher hsd hsd check_run $1)"; then
		dprint "Not running!"
		return 1
	fi
	source "$XDG_CONFIG_HOME/hsd/service/$1.sh"
	if ( type hsd_stop | grep -q function ); then
		hsd_stop
	else
		echo "kill ${2--SIGTERM} -- -$(ps -p $pid -o pgid= | sed 's/ //g')"
		kill ${2--SIGTERM} -- -$(ps -p $pid -o pgid= | sed 's/ //g')
	fi
}

_hsd_parse() {
	eval _hsd_$1 "${@:2}"
}

mkdir -p "$XDG_DATA_HOME/hsd/service"
fifofile="$XDG_DATA_HOME/hsd/fifo"
echo $$>"$XDG_DATA_HOME/hsd/pid"
rm -f $fifofile
mkfifo "$fifofile"
while true; do
	if read -r line <"$fifofile"; then
		date >> ~/.local/share/hsd/debug.log
		echo $line >> ~/.local/share/hsd/debug.log
		_hsd_parse $line
	fi
done
